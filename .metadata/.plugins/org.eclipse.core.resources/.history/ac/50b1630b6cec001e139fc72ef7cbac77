package personal.learning.activemq.jms;

import java.util.Enumeration;
import java.util.Iterator;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.Queue;
import javax.jms.QueueBrowser;
import javax.jms.Session;
import javax.jms.TextMessage;

import org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory;

public class Consuming_Messages {
	
	public static void main(String[] args) {
		
		ConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
		Connection connection = null;
		Session session = null;
		
		try {
			connection = connectionFactory.createConnection();
			session = connection.createSession();
			
			Queue queue = session.createQueue("queue2");
			
			connection.start();
			
			MessageConsumer consumer = session.createConsumer(queue);
			
			QueueBrowser queueBrowser = session.createBrowser(queue);
			Enumeration<TextMessage> messageEnum = queueBrowser.getEnumeration();
			Iterator<TextMessage> iterator = messageEnum.asIterator();
			
			int noOfMessages = 0;
			
			while(iterator.hasNext()) {
				noOfMessages++;
				iterator.next();
			}
			
			Message message1 = consumer.receiveNoWait();
			System.out.println("Message received: " + message1.getBody(String.class));
			
			Message message2 = consumer.receiveNoWait();
			System.out.println("Message received: " + message2.getBody(String.class));
			
			while(true) {
				
			}
			
			
		} catch(JMSException e) {
			
		}
	}
}
